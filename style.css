html {
  margin: 0px;
  padding: 0px;
  font-family: "Lucida Sans";
  background-color: rgb(253, 255, 149);
}

* {
  box-sizing: border-box;
}

Body {
  margin: 0px auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

h1 {
  margin: 10px;
  font-family: "Sofia";
  font-size: 40px;
  border-bottom: lime 10px double;
}

.intro {
  display: flex;
  flex-direction: row;
  margin-bottom: 10px;
}

.textAndButtons {
  margin-right: 20px;
  width: 500px;
}

.volumeSec {
  display: flex;
  align-items: center;
}

#volume-control {
  margin-left: 20px;
}

button {
  margin: 5px;
  background-color: lime;
  border: lime 3px outset;
  padding: 6px;
  border-radius: 10%;
}

button:hover {
  cursor: pointer;
}

button:active {
  border: lime 3px inset;
}

input {
  margin-top: 15px;
}

.jellyBeans {
  border: 10px lime solid;
  border-radius: 10%;
}

#turnOrder,
#winnerMessage,
#tieMessage {
  font-weight: bold;
  font-size: 18px;
  margin-bottom: 10px;
  display: none; /* only show when conditions are met */
}

#gameBoardFull {
  background: url("./board_noholes_withZones_v4.PNG");
  height: 350px;
  object-fit: cover;
  width: 1000px;
  margin: 0 auto;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  font-family: "Sofia";
}

.littleHoles {
  display: flex;
  flex-direction: row;
}

.P1row,
.P2row {
  display: flex;
  flex-wrap: wrap;
  width: 350px;
  height: 300px;
  justify-content: space-evenly;
  align-items: center;
}

#P1Hole,
#P2Hole {
  /*left6, right6*/
  height: 300px;
  width: 125px;
  background-color: rgb(131, 93, 43);
  color: white;
  border-radius: 30%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 15px;
  font-size: 40px;
  cursor: grab;
}

.hole {
  /* reference specific holes with this format: #id1 {color:red}; */
  height: 105px;
  width: 105px;
  background-color: rgb(131, 93, 43);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 30px;
  cursor: grab;
}

.bottomText {
  margin: 10px;
}

a:link,
a:visited {
  color: rgb(0, 165, 0);
}

a:hover {
  color: lime;
}

/*///////// CURSOR FUNCTIONALITY /////////*/
/* make all these changes when the start button is pressed and end them when the reset button is pressed */
/* when hovering over a hole you're not allowed to click, do "cursor:not-allowed;" */
/* when it's P1's turn, change cursor to blue. when it's P2's turn, change cursor to red */
/* show numHeld right next to cursor */
/* if numHeld>0, wanted to change cursor to "cursor:grabbing", but couldn't get this to work. i think css wants this cursor to apply when you hold down the left mouse button, which wouldn't be good here. */

.cursorNum {
  width: 30px;
  height: 30px;
  font-size: 25px;
  text-align: center;
  position: absolute;
  pointer-events: none; /*prevents element from getting in the way of actual pointer clicks*/
  position: fixed; /*prevents box from moving while scrolling, along with -scrollX/Y values in js code*/
  color: black;
}

.pickUp {
  /* pulse number when you click a valid hole */
  animation: pulse 0.5s forwards; /*forwards prevents it from looping*/
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.75);
  }
  100% {
    transform: scale(1);
  }
}
